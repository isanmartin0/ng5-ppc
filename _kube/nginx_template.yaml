apiVersion: v1
kind: Template
metadata:
  name: Nginx-template
  annotations:
    openshift.io/display-name: Nginx HTTP server and a reverse proxy
    description: An Nginx HTTP server and a reverse proxy (nginx) application that serves static content.
    tags: nginx
    iconClass: icon-nginx
    openshift.io/long-description: This template defines resources needed to develop a static application served by Nginx HTTP server and a reverse proxy (nginx), including a build configuration and application deployment configuration.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    template.openshift.io/bindable: "false"
message: "The following service(s) have been created in your project: ${PROJECT}."
labels:
  template: Nginx-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      description: Keeps track of changes in the application image
    generation: 1
    labels:
      app: ${PROJECT}
    name: ${PROJECT}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${PROJECT}
    name: ${PROJECT}
  spec:
    nodeSelector: null
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${SOURCE_REPOSITORY_BRANCH}
        uri: ${SOURCE_REPOSITORY_URL}
      contextDir: ${CONTEXT_DIR}
      type: Git
    strategy:
      type: Source
      sourceStrategy:
        env:
        - name: ANGULAR_PACKAGE_NAME
          value: ${ANGULAR_PACKAGE_NAME}
        - name: ANGULAR_PACKAGE_TARBALL
          value: ${ANGULAR_PACKAGE_TARBALL}
        - name: ARTIFACTORY_REPO
          value: ${ARTIFACTORY_REPO}
        - name: ARTIFACTORY_TOKEN
          value: ${ARTIFACTORY_TOKEN}
        - name: BUILD_OUTPUT_PATH
          value: ${BUILD_OUTPUT_PATH}
        from:
          kind: ImageStreamTag
          name: nginx:${NGINX_VERSION}
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: ${PROJECT}:latest
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 1
    labels:
      app: ${PROJECT}
    name: ${PROJECT}
  spec:
    replicas: 1
    selector:
      app: ${PROJECT}
      deploymentconfig: ${PROJECT}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: ${PROJECT}
          deploymentconfig: ${PROJECT}
        name: ${PROJECT}
      spec:
        containers:
        - image: "${DOCKER_REGISTRY}:5000/${PROJECT}${BRANCH_NAME_HY_CONTAINER_IMAGE}/${PROJECT}:latest"
          name: ${PROJECT}
          ports:
          - containerPort: 8081
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: /
              port: 8081
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: 8081
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      description: Exposes and load balances the application pods
    labels:
      app: ${PROJECT}
    name: ${PROJECT}
  spec:
    ports:
    - name: web
      port: 8081
      targetPort: 8081
    selector:
      app: ${PROJECT}
      deploymentconfig: ${PROJECT}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    name: ${PROJECT}
  spec:
    host: "${PROJECT}${HOST_NAME}"
    port:
      targetPort: web
    to:
      kind: Service
      name: ${PROJECT}
      weight: 100
    wildcardPolicy: None
- apiVersion: extensions/v1beta1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: ${PROJECT}
    name: ${PROJECT}
  spec:
    scaleRef:
      kind: DeploymentConfig
      name: ${PROJECT}
      apiVersion: v1
      subresource: scale
    minReplicas: ${MIN_POD_REPLICAS}
    maxReplicas: ${MAX_POD_REPLICAS}
    cpuUtilization:
      targetPercentage: 80
parameters:
- description: "Project name"
  name: "PROJECT"
  value: ""
- description: "Branch name"
  name: "BRANCH_NAME"
  value: ""
- description: "Branch name hyphenated"
  name: "BRANCH_NAME_HY"
  value: ""
- description: "Branch name for container image hyphenated"
  name: "BRANCH_NAME_HY_CONTAINER_IMAGE"
  value: ""
- description: "Docker Registry"
  name: "DOCKER_REGISTRY"
  value: ""
- description: "SOURCE_REPOSITORY_URL"
  name: "SOURCE_REPOSITORY_URL"
  value: ""
- description: "SOURCE_REPOSITORY_BRANCH"
  name: "SOURCE_REPOSITORY_BRANCH"
  value: ""
- description: "EnvLabel"
  name: "envLabel"
  value: ""
- description: "Host Name"
  name: "HOST_NAME"
  value: ""
- description: "Minimum number of replicas of pods"
  name: "MIN_POD_REPLICAS"
  value: ""
- description: "Maximum number of replicas of pods"
  name: "MAX_POD_REPLICAS"
  value: ""
- description: "Angular package name"
  name: "ANGULAR_PACKAGE_NAME"
  value: ""
- description: "Angular package tarball"
  name: "ANGULAR_PACKAGE_TARBALL"
  value: ""
- description: "Artifactory repository"
  name: "ARTIFACTORY_REPO"
  value: ""
- description: "Set this to the relative path to your project if it is not in the root of your repository."
  name: "CONTEXT_DIR"
  value: ""
- description: "Version of NGINX image to be used (1.12 by default)."
  name: "NGINX_VERSION"
  value: "1.12"
- description: "Artifactory Token"
  name: "ARTIFACTORY_TOKEN"
  value: ""
- description: "Build Output Path"
  name: "BUILD_OUTPUT_PATH"
  value: ""
